def jaccard(a, b):
    c = a.intersection(b)
    return float(len(c)) / (len(a) + len(b) - len(c))

list1 = [line.rstrip('\n') for line in "partition_01_replist.txt"]
list2 = [line.rstrip('\n') for line in "partition_02_replist.txt"]
list3 = [line.rstrip('\n') for line in "partition_03_replist.txt"]
list4 = [line.rstrip('\n') for line in "partition_04_replist.txt"]
list5 = [line.rstrip('\n') for line in "partition_05_replist.txt"]
list6 = [line.rstrip('\n') for line in "partition_06_replist.txt"]
list7 = [line.rstrip('\n') for line in "partition_07_replist.txt"]
list8 = [line.rstrip('\n') for line in "partition_08_replist.txt"]
list9 = [line.rstrip('\n') for line in "partition_09_replist.txt"]
list10 = [line.rstrip('\n') for line in "partition_10_replist.txt"]

rep_list1 = set(list1)
rep_list2 = set(list2)
rep_list3 = set(list3)
rep_list4 = set(list4)
rep_list5 = set(list5)
rep_list6 = set(list6)
rep_list7 = set(list7)
rep_list8 = set(list8)
rep_list9 = set(list9)
rep_list10 = set(list10)

from itertools import combinations

# change if you choose a different number of partitions
partitions = []
for i in range(1,int(input('How many partitions? '))+1):
    partitions.append(i)
comb = combinations(partitions, 2)
for (i,j) in list(comb):
    temp = jaccard(i,j)
    print "Jaccard Index for Lists: "+ str(i)+"," + str(j) + " is" + str(temp),
